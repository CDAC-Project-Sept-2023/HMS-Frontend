{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\MAYUR GADEKAR\\\\Desktop\\\\HMS Frontend Git\\\\HMS Frontend\\\\src\\\\components\\\\UI\\\\AppointmentItem.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { Col } from \"reactstrap\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport \"../../styles/car-item.css\";\nimport { createUrl } from \"../../utils/utils\";\nimport axios from \"axios\";\nimport { toast } from \"react-toastify\";\nimport { getAuthorizationHeader } from \"../../utils/jwtUtil\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst AppointmentItem = ({\n  appointment\n}) => {\n  _s();\n  const [appointmentStatus, setAppointmentStatus] = useState(true);\n  const [paymentStatus, setPaymentStatus] = useState(true);\n  const navigate = useNavigate();\n  const handleStatusChange = id => {\n    //    const patientId = sessionStorage .getItem(\"userId\");\n    var updatedUrl = createUrl(`/appoinment/${id}`);\n    console.log(id);\n    debugger;\n    axios.put(updatedUrl, {\n      headers: {\n        Authorization: getAuthorizationHeader()\n      }\n    }).then(result => {\n      console.log(\"Full Response:\", result);\n      setAppointmentStatus(false);\n      window.location.reload();\n    }).catch(error => {\n      // Handle network errors\n      console.error(\"Network Error:\", error);\n      // You can also use toast.error(\"Network Error: \" + error.message);\n      toast.error(\"Network Error: Unable to reach the server\");\n    });\n  };\n\n  //mrehto for change payment status\n\n  const handlePaymentStatusChange = id => {\n    //    const patientId = sessionStorage .getItem(\"userId\");\n    var updatedUrl = createUrl(`/appoinment/paymentStatus/${id}`);\n    console.log(id);\n    debugger;\n    axios.put(updatedUrl, {\n      headers: {\n        Authorization: \"bearer \"\n      }\n    }).then(result => {\n      console.log(\"Full Response:\", result);\n      setPaymentStatus(false);\n      window.location.reload();\n    }).catch(error => {\n      // Handle network errors\n      console.error(\"Network Error:\", error);\n      // You can also use toast.error(\"Network Error: \" + error.message);\n      toast.error(\"Network Error: Unable to reach the server\");\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"tr\", {\n    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n      children: appointment.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: appointment.age\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: appointment.relation\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: appointment.doctor.schedule.map((schedule, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: schedule.day\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: appointment.doctor.schedule.map((schedule, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: schedule.time\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), sessionStorage.getItem(\"userRoles\") === \"ROLE_ADMIN\" && /*#__PURE__*/_jsxDEV(\"td\", {\n      children: appointment.paymentAmount\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: appointment.timestamp\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), sessionStorage.getItem(\"userRoles\") === \"ROLE_DOCTOR\" && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"td\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"btn btn-warning\",\n          onClick: () => handleStatusChange(appointment.id),\n          disabled: !appointmentStatus,\n          children: \"Resolved\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }, this)\n    }, void 0, false), sessionStorage.getItem(\"userRoles\") === \"ROLE_ADMIN\" && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"td\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"btn btn-success\",\n          onClick: () => handlePaymentStatusChange(appointment.id),\n          disabled: !paymentStatus,\n          children: \"Resolved\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 11\n      }, this)\n    }, void 0, false), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: appointment.paymentStatus\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n};\n_s(AppointmentItem, \"cWWDiBp7PQsgxZCS0q+HQ5Epkgc=\", false, function () {\n  return [useNavigate];\n});\n_c = AppointmentItem;\nexport default AppointmentItem;\n\n// {sessionStorage.getItem(\"userRoles\")===\"Patient\" && (\n//   <>        <div className=\"container\">\n//   <form onSubmit={bookAppointment}>\n//       <div className=\"table-responsive\">\n//          <table className=\"table table-bordered\">\n//           <thead>\n//              <tr>\n//                <th colSpan=\"2\" className=\"text-center\">\n//                  <strong>Fill Appointment Details</strong>\n//                </th>\n//   </tr>\n//           </thead>\n//              <tbody>\n//            <tr>\n//              <td>\n//                  <strong>Patient Name:</strong>\n//                </td>\n//                <td>\n//                  <input\n//                    type=\"text\"\n//                    className=\"form-control\"\n//                    name=\"name\"\n//                    value={formData.name}\n//                    onChange={handleInputChange}\n//                    placeholder=\"Enter patient name\"\n//                    required\n//                  />\n//                </td>\n//              </tr>\n//             <tr>\n//               <td>\n//                 <strong>Patient Age:</strong>\n//                </td>\n//                <td>\n//                  <input\n//                    type=\"text\"\n//                  className=\"form-control\"\n//                    name=\"age\"\n//                    value={formData.age}\n//                    onChange={handleInputChange}\n//                    placeholder=\"Enter patient age\"\n//                    required\n//                  />\n//                </td>\n//              </tr>\n//              <tr>\n//                <td>\n//                  <strong>Patient Contact No:</strong>\n//                </td>\n//                <td>\n//                  <input\n//                    type=\"text\"\n//                    className=\"form-control\"\n//                    name=\"contactNo\"\n//                   value={formData.contactNo}\n//                   onChange={handleInputChange}\n//                   placeholder=\"Enter contact number\"\n//                   required\n//                 />\n//                </td>\n//              </tr>\n//              <tr>\n//                <td>\n//                  <strong>Relation with the Patient:</strong>\n//                </td>\n//                <td>\n//                  <input\n//                    type=\"text\"\n//                    className=\"form-control\"\n//                    name=\"relation\"\n//                    value={formData.relation}\n//                    onChange={handleInputChange}\n//                    placeholder=\"Enter relation\"\n//                    required\n//                  />\n//                </td>\n//              </tr>\n//              <tr>\n//               <td></td>\n\n//              </tr>\n//              {loading ? ( // Show loading indicator if data is being fetched\n//                <tr>\n//                  <td colSpan=\"2\" className=\"text-center\">\n//                    Loading...\n//                  </td>\n//                </tr>\n//              ) : doctor.length > 0 ? ( // Render select options if doctor data is available\n//                <tr>\n//                  <td>\n//                    <strong>Select Doctor:</strong>\n//                  </td>\n//                  <td>\n//                    <select\n//                      className=\"form-select select-doctor\"\n//                      aria-label=\"Select doctor\"\n//                      onChange={(e) => setSelectedDoctor(e.target.value)}\n//                      required\n//                    >\n//                      <option value=\"\">Select a doctor</option>\n//                      {doctor.map((doc, index) => (\n//                        <option key={index} value={doc.id}>\n//                          {doc.dname}\n//                        </option>\n\n//                      ))}\n//                    </select>\n//                  </td>\n\n//                </tr>\n\n//              ) : (\n//                <tr>\n//                  <td colSpan=\"2\" className=\"text-center\">\n//                    No doctors available\n//                  </td>\n//                </tr>\n//              )}\n//            </tbody>\n//          </table>\n//        </div>\n//        <div className=\"text-center\">\n//          <button type=\"submit\" className=\"btn btn-primary\">\n//            Submit\n//        </button>\n//      </div>\n//      </form>\n//    </div>\n\n// </>\n// )}\n\n/////\n//running code\n// import React from \"react\";\n// import { Col } from \"reactstrap\";\n// import { Link, useNavigate } from \"react-router-dom\";\n// import \"../../styles/car-item.css\";\n// import { createUrl } from \"../../utils/utils\";\n\n// const AppointmentItem = ({ appointment }) => {\n//   return (\n//     <tr>\n//       <td>{appointment.name}</td>\n\n//       <td>{appointment.age}</td>\n//       <td>{appointment.relation}</td>\n\n//        <td>\n//         <ul>\n//           {appointment.doctor.dschedule.map((schedule, index) => (\n//             <li key={index}>{schedule.day}</li>\n//           ))}\n//         </ul>\n//       </td>\n//       <td>\n//         <ul>\n//           {appointment.doctor.dschedule.map((schedule, index) => (\n//             <li key={index}>{schedule.time}</li>\n//           ))}\n//         </ul>\n//       </td>\n//       <td>{appointment.paymentAmount}</td>\n//       <td>{appointment.timestamp}</td>\n//       <td>\n//               <button\n//                 type=\"button\"\n//                 className={`btn btn-${appointment.appointmentStatus === \"success\" ? \"success\" : \"default\"}`}\n//               >\n//                 {appointment.appointmentStatus}\n//               </button>\n//             </td>\n//       <td>{appointment.paymentStatus}</td>\n\n//     </tr>\n//   );\n// };\n// export default AppointmentItem;\n\n/////\n/*const CarItem = (props) => {\r\n  const {  id,  modelName, brandName, automatic, speed, price } = props.item;\r\n  const imageUrl = createUrl(`/cars/images/${id}`);\r\n  \r\n\r\n  const navigate = useNavigate();\r\n  \r\n  //You Have To get the insurance First \r\n  const BookNow = () => {\r\n    // navigate(\"/cars/bookingForm\");\r\n    navigate(`/booking/${id}`, { state: { car: props.item } });\r\n  }\r\n\r\n  const carDetails = () => {\r\n\r\n    navigate(`/carDetails/${id}`);\r\n    console.log(id);\r\n    debugger\r\n  }\r\n\r\n  return (\r\n    <Col lg=\"4\" md=\"4\" sm=\"6\" className=\"mb-5\">\r\n      <div className=\"car__item\">\r\n        <div className=\"car__img\">\r\n          <img className=\"w-100 image_car\" src={imageUrl} alt=\"\"  />\r\n        </div>\r\n\r\n        <div className=\"car__item-content mt-4\">\r\n          <h4 className=\"section__title text-center\">{brandName}</h4>\r\n          <h6 className=\"rent__price text-center mt-\">\r\n            ₹{price}.00 \r\n          </h6>\r\n\r\n          <div className=\"car__item-info d-flex align-items-center justify-content-between mt-3 mb-4\">\r\n            <span className=\" d-flex align-items-center gap-1\">\r\n              <i class=\"ri-car-line\"></i> {modelName}\r\n            </span>\r\n            <span className=\" d-flex align-items-center gap-1\">\r\n              <i class=\"ri-settings-2-line\"></i> {automatic}\r\n            </span>\r\n            <span className=\" d-flex align-items-center gap-1\">\r\n              <i class=\"ri-timer-flash-line\"></i> {speed}\r\n            </span>\r\n          </div>\r\n\r\n          <button className=\" w-50 car__item-btn car__btn-rent\" onClick= {BookNow}>\r\n            \r\n            <Link to={`/cars/${id}`}>Book</Link>  \r\n          </button>\r\n\r\n          <button className=\" w-50 car__item-btn car__btn-details\" onClick={carDetails}>\r\n            Details\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </Col>\r\n  );\r\n};\r\n*/\n\n{\n  /* {doctors.map((doctor) => (\r\n            <tr key={doctor.id}>\r\n              <td>{doctor.dname}</td>\r\n              <td>{doctor.dcontactNo}</td>\r\n              <td>{doctor.dspecialisation}</td>\r\n              <td>\r\n                <ul>\r\n                  {doctor.dschedule.map((schedule, index) => (\r\n                    <li key={index}>{schedule.day}</li>\r\n                  ))}\r\n                </ul>\r\n              </td>\r\n              <td>\r\n                <ul>\r\n                  {doctor.dschedule.map((schedule, index) => (\r\n                    <li key={index}>{schedule.time}</li>\r\n                  ))}\r\n                </ul>\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody> */\n}\nvar _c;\n$RefreshReg$(_c, \"AppointmentItem\");","map":{"version":3,"names":["React","useState","Col","Link","useNavigate","createUrl","axios","toast","getAuthorizationHeader","jsxDEV","_jsxDEV","Fragment","_Fragment","AppointmentItem","appointment","_s","appointmentStatus","setAppointmentStatus","paymentStatus","setPaymentStatus","navigate","handleStatusChange","id","updatedUrl","console","log","put","headers","Authorization","then","result","window","location","reload","catch","error","handlePaymentStatusChange","children","name","fileName","_jsxFileName","lineNumber","columnNumber","age","relation","doctor","schedule","map","index","day","time","sessionStorage","getItem","paymentAmount","timestamp","type","className","onClick","disabled","_c","$RefreshReg$"],"sources":["C:/Users/MAYUR GADEKAR/Desktop/HMS Frontend Git/HMS Frontend/src/components/UI/AppointmentItem.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { Col } from \"reactstrap\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport \"../../styles/car-item.css\";\r\nimport { createUrl } from \"../../utils/utils\";\r\nimport axios from \"axios\";\r\nimport { toast } from \"react-toastify\";\r\nimport { getAuthorizationHeader } from \"../../utils/jwtUtil\";\r\n\r\nconst AppointmentItem = ({ appointment }) => {\r\n  const [appointmentStatus, setAppointmentStatus] = useState(true);\r\n  const [paymentStatus, setPaymentStatus] = useState(true);\r\n  const navigate = useNavigate();\r\n  const handleStatusChange = (id) => {\r\n    //    const patientId = sessionStorage .getItem(\"userId\");\r\n    var updatedUrl = createUrl(`/appoinment/${id}`);\r\n\r\n    console.log(id);\r\n    debugger;\r\n    axios\r\n      .put(updatedUrl, {\r\n        headers: {\r\n          Authorization: getAuthorizationHeader(),\r\n        },\r\n      })\r\n      .then((result) => {\r\n        console.log(\"Full Response:\", result);\r\n        setAppointmentStatus(false);\r\n        window.location.reload();\r\n      })\r\n      .catch((error) => {\r\n        // Handle network errors\r\n        console.error(\"Network Error:\", error);\r\n        // You can also use toast.error(\"Network Error: \" + error.message);\r\n        toast.error(\"Network Error: Unable to reach the server\");\r\n      });\r\n  };\r\n\r\n  //mrehto for change payment status\r\n\r\n  const handlePaymentStatusChange = (id) => {\r\n    //    const patientId = sessionStorage .getItem(\"userId\");\r\n    var updatedUrl = createUrl(`/appoinment/paymentStatus/${id}`);\r\n\r\n    console.log(id);\r\n    debugger;\r\n    axios\r\n      .put(updatedUrl, {\r\n        headers: {\r\n          Authorization: \"bearer \" ,\r\n        },\r\n      })\r\n      .then((result) => {\r\n        console.log(\"Full Response:\", result);\r\n        setPaymentStatus(false);\r\n        window.location.reload();\r\n      })\r\n      .catch((error) => {\r\n        // Handle network errors\r\n        console.error(\"Network Error:\", error);\r\n        // You can also use toast.error(\"Network Error: \" + error.message);\r\n        toast.error(\"Network Error: Unable to reach the server\");\r\n      });\r\n  };\r\n  return (\r\n    <tr>\r\n      <td>{appointment.name}</td>\r\n\r\n      <td>{appointment.age}</td>\r\n      <td>{appointment.relation}</td>\r\n\r\n      <td>\r\n        <ul>\r\n          {appointment.doctor.schedule.map((schedule, index) => (\r\n            <li key={index}>{schedule.day}</li>\r\n          ))}\r\n        </ul>\r\n      </td>\r\n      <td>\r\n        <ul>\r\n          {appointment.doctor.schedule.map((schedule, index) => (\r\n            <li key={index}>{schedule.time}</li>\r\n          ))}\r\n        </ul>\r\n      </td>\r\n      \r\n      {sessionStorage.getItem(\"userRoles\") === \"ROLE_ADMIN\" && (\r\n      <td>{appointment.paymentAmount}</td>                                      \r\n                                    )}\r\n\r\n      <td>{appointment.timestamp}</td>\r\n\r\n      {sessionStorage.getItem(\"userRoles\") === \"ROLE_DOCTOR\" && (\r\n        <>\r\n          <td>\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-warning\"\r\n              onClick={() => handleStatusChange(appointment.id)}\r\n              disabled={!appointmentStatus}\r\n            >\r\n              Resolved\r\n            </button>\r\n          </td>\r\n        </>\r\n      )}\r\n      {sessionStorage.getItem(\"userRoles\") === \"ROLE_ADMIN\" && (\r\n        <>\r\n          <td>\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-success\"\r\n              onClick={() => handlePaymentStatusChange(appointment.id)}\r\n              disabled={!paymentStatus}\r\n            >\r\n              Resolved\r\n            </button>\r\n          </td>\r\n        </>\r\n      )}\r\n      <td>{appointment.paymentStatus}</td>\r\n    </tr>\r\n  );\r\n};\r\nexport default AppointmentItem;\r\n\r\n// {sessionStorage.getItem(\"userRoles\")===\"Patient\" && (\r\n//   <>        <div className=\"container\">\r\n//   <form onSubmit={bookAppointment}>\r\n//       <div className=\"table-responsive\">\r\n//          <table className=\"table table-bordered\">\r\n//           <thead>\r\n//              <tr>\r\n//                <th colSpan=\"2\" className=\"text-center\">\r\n//                  <strong>Fill Appointment Details</strong>\r\n//                </th>\r\n//   </tr>\r\n//           </thead>\r\n//              <tbody>\r\n//            <tr>\r\n//              <td>\r\n//                  <strong>Patient Name:</strong>\r\n//                </td>\r\n//                <td>\r\n//                  <input\r\n//                    type=\"text\"\r\n//                    className=\"form-control\"\r\n//                    name=\"name\"\r\n//                    value={formData.name}\r\n//                    onChange={handleInputChange}\r\n//                    placeholder=\"Enter patient name\"\r\n//                    required\r\n//                  />\r\n//                </td>\r\n//              </tr>\r\n//             <tr>\r\n//               <td>\r\n//                 <strong>Patient Age:</strong>\r\n//                </td>\r\n//                <td>\r\n//                  <input\r\n//                    type=\"text\"\r\n//                  className=\"form-control\"\r\n//                    name=\"age\"\r\n//                    value={formData.age}\r\n//                    onChange={handleInputChange}\r\n//                    placeholder=\"Enter patient age\"\r\n//                    required\r\n//                  />\r\n//                </td>\r\n//              </tr>\r\n//              <tr>\r\n//                <td>\r\n//                  <strong>Patient Contact No:</strong>\r\n//                </td>\r\n//                <td>\r\n//                  <input\r\n//                    type=\"text\"\r\n//                    className=\"form-control\"\r\n//                    name=\"contactNo\"\r\n//                   value={formData.contactNo}\r\n//                   onChange={handleInputChange}\r\n//                   placeholder=\"Enter contact number\"\r\n//                   required\r\n//                 />\r\n//                </td>\r\n//              </tr>\r\n//              <tr>\r\n//                <td>\r\n//                  <strong>Relation with the Patient:</strong>\r\n//                </td>\r\n//                <td>\r\n//                  <input\r\n//                    type=\"text\"\r\n//                    className=\"form-control\"\r\n//                    name=\"relation\"\r\n//                    value={formData.relation}\r\n//                    onChange={handleInputChange}\r\n//                    placeholder=\"Enter relation\"\r\n//                    required\r\n//                  />\r\n//                </td>\r\n//              </tr>\r\n//              <tr>\r\n//               <td></td>\r\n\r\n//              </tr>\r\n//              {loading ? ( // Show loading indicator if data is being fetched\r\n//                <tr>\r\n//                  <td colSpan=\"2\" className=\"text-center\">\r\n//                    Loading...\r\n//                  </td>\r\n//                </tr>\r\n//              ) : doctor.length > 0 ? ( // Render select options if doctor data is available\r\n//                <tr>\r\n//                  <td>\r\n//                    <strong>Select Doctor:</strong>\r\n//                  </td>\r\n//                  <td>\r\n//                    <select\r\n//                      className=\"form-select select-doctor\"\r\n//                      aria-label=\"Select doctor\"\r\n//                      onChange={(e) => setSelectedDoctor(e.target.value)}\r\n//                      required\r\n//                    >\r\n//                      <option value=\"\">Select a doctor</option>\r\n//                      {doctor.map((doc, index) => (\r\n//                        <option key={index} value={doc.id}>\r\n//                          {doc.dname}\r\n//                        </option>\r\n\r\n//                      ))}\r\n//                    </select>\r\n//                  </td>\r\n\r\n//                </tr>\r\n\r\n//              ) : (\r\n//                <tr>\r\n//                  <td colSpan=\"2\" className=\"text-center\">\r\n//                    No doctors available\r\n//                  </td>\r\n//                </tr>\r\n//              )}\r\n//            </tbody>\r\n//          </table>\r\n//        </div>\r\n//        <div className=\"text-center\">\r\n//          <button type=\"submit\" className=\"btn btn-primary\">\r\n//            Submit\r\n//        </button>\r\n//      </div>\r\n//      </form>\r\n//    </div>\r\n\r\n// </>\r\n// )}\r\n\r\n/////\r\n//running code\r\n// import React from \"react\";\r\n// import { Col } from \"reactstrap\";\r\n// import { Link, useNavigate } from \"react-router-dom\";\r\n// import \"../../styles/car-item.css\";\r\n// import { createUrl } from \"../../utils/utils\";\r\n\r\n// const AppointmentItem = ({ appointment }) => {\r\n//   return (\r\n//     <tr>\r\n//       <td>{appointment.name}</td>\r\n\r\n//       <td>{appointment.age}</td>\r\n//       <td>{appointment.relation}</td>\r\n\r\n//        <td>\r\n//         <ul>\r\n//           {appointment.doctor.dschedule.map((schedule, index) => (\r\n//             <li key={index}>{schedule.day}</li>\r\n//           ))}\r\n//         </ul>\r\n//       </td>\r\n//       <td>\r\n//         <ul>\r\n//           {appointment.doctor.dschedule.map((schedule, index) => (\r\n//             <li key={index}>{schedule.time}</li>\r\n//           ))}\r\n//         </ul>\r\n//       </td>\r\n//       <td>{appointment.paymentAmount}</td>\r\n//       <td>{appointment.timestamp}</td>\r\n//       <td>\r\n//               <button\r\n//                 type=\"button\"\r\n//                 className={`btn btn-${appointment.appointmentStatus === \"success\" ? \"success\" : \"default\"}`}\r\n//               >\r\n//                 {appointment.appointmentStatus}\r\n//               </button>\r\n//             </td>\r\n//       <td>{appointment.paymentStatus}</td>\r\n\r\n//     </tr>\r\n//   );\r\n// };\r\n// export default AppointmentItem;\r\n\r\n/////\r\n/*const CarItem = (props) => {\r\n  const {  id,  modelName, brandName, automatic, speed, price } = props.item;\r\n  const imageUrl = createUrl(`/cars/images/${id}`);\r\n  \r\n\r\n  const navigate = useNavigate();\r\n  \r\n  //You Have To get the insurance First \r\n  const BookNow = () => {\r\n    // navigate(\"/cars/bookingForm\");\r\n    navigate(`/booking/${id}`, { state: { car: props.item } });\r\n  }\r\n\r\n  const carDetails = () => {\r\n\r\n    navigate(`/carDetails/${id}`);\r\n    console.log(id);\r\n    debugger\r\n  }\r\n\r\n  return (\r\n    <Col lg=\"4\" md=\"4\" sm=\"6\" className=\"mb-5\">\r\n      <div className=\"car__item\">\r\n        <div className=\"car__img\">\r\n          <img className=\"w-100 image_car\" src={imageUrl} alt=\"\"  />\r\n        </div>\r\n\r\n        <div className=\"car__item-content mt-4\">\r\n          <h4 className=\"section__title text-center\">{brandName}</h4>\r\n          <h6 className=\"rent__price text-center mt-\">\r\n            ₹{price}.00 \r\n          </h6>\r\n\r\n          <div className=\"car__item-info d-flex align-items-center justify-content-between mt-3 mb-4\">\r\n            <span className=\" d-flex align-items-center gap-1\">\r\n              <i class=\"ri-car-line\"></i> {modelName}\r\n            </span>\r\n            <span className=\" d-flex align-items-center gap-1\">\r\n              <i class=\"ri-settings-2-line\"></i> {automatic}\r\n            </span>\r\n            <span className=\" d-flex align-items-center gap-1\">\r\n              <i class=\"ri-timer-flash-line\"></i> {speed}\r\n            </span>\r\n          </div>\r\n\r\n          <button className=\" w-50 car__item-btn car__btn-rent\" onClick= {BookNow}>\r\n            \r\n            <Link to={`/cars/${id}`}>Book</Link>  \r\n          </button>\r\n\r\n          <button className=\" w-50 car__item-btn car__btn-details\" onClick={carDetails}>\r\n            Details\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </Col>\r\n  );\r\n};\r\n*/\r\n\r\n{\r\n  /* {doctors.map((doctor) => (\r\n            <tr key={doctor.id}>\r\n              <td>{doctor.dname}</td>\r\n              <td>{doctor.dcontactNo}</td>\r\n              <td>{doctor.dspecialisation}</td>\r\n              <td>\r\n                <ul>\r\n                  {doctor.dschedule.map((schedule, index) => (\r\n                    <li key={index}>{schedule.day}</li>\r\n                  ))}\r\n                </ul>\r\n              </td>\r\n              <td>\r\n                <ul>\r\n                  {doctor.dschedule.map((schedule, index) => (\r\n                    <li key={index}>{schedule.time}</li>\r\n                  ))}\r\n                </ul>\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody> */\r\n}\r\n"],"mappings":"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3BC,OAAO,EAAEA,CAAA,KAAMrB,yBAAyB,CAACtB,WAAW,CAACQ,EAAE,CAAE;UACzDoC,QAAQ,EAAE,CAACxC,aAAc;UAAAmB,QAAA,EAC1B;QAED;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACP;IAAC,gBACL,CACH,eACDhC,OAAA;MAAA2B,QAAA,EAAKvB,WAAW,CAACI;IAAa;MAAAqB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAClC,CAAC;AAET,CAAC;AAAC3B,EAAA,CAlHIF,eAAe;EAAA,QAGFT,WAAW;AAAA;AAAAuD,EAAA,GAHxB9C,eAAe;AAmHrB,eAAeA,eAAe;;AAE9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;EACE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AArBE;AAsBD,IAAA8C,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}