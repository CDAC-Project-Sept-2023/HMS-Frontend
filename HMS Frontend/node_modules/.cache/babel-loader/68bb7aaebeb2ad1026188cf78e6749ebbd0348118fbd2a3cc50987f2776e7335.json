{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\MAYUR GADEKAR\\\\Desktop\\\\HMS Frontend Git\\\\HMS Frontend\\\\src\\\\pages\\\\Appointment.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { Container, Table } from \"reactstrap\";\nimport Helmet from \"../components/Helmet/Helmet\";\nimport CommonSection from \"../components/UI/CommonSection\";\nimport DoctorItem from \"../components/UI/DoctorItem\";\nimport axios from \"axios\";\nimport { createUrl, log } from \"../utils/utils\";\nimport \"../styles/header.css\";\nimport { toast } from \"react-toastify\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst DoctorListing = () => {\n  _s();\n  const navigate = useNavigate();\n  const [doctor, setDoctor] = useState([]);\n  const [selectedDoctor, setSelectedDoctor] = useState(\"\");\n  const [loading, setLoading] = useState(true);\n  const [formData, setFormData] = useState({\n    name: \"\",\n    age: \"\",\n    contactNo: \"\",\n    relation: \"\"\n  });\n  const patientId = sessionStorage.getItem(\"userId\");\n  useEffect(() => {\n    loadDoctors();\n  }, []);\n  const loadDoctors = () => {\n    const url = createUrl(\"/doctor\");\n    axios.get(url).then(function (response) {\n      setDoctor(response.data);\n      setLoading(false); // Set loading to false after fetching data\n      log(response);\n    }).catch(function (error) {\n      log(error);\n      setLoading(false); // Set loading to false in case of error\n    });\n  };\n  const handleInputChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setFormData({\n      ...formData,\n      [name]: value\n    });\n  };\n  const bookAppointment = async event => {\n    event.preventDefault(); // Prevent default form submission behavior\n    const url = createUrl(\"/appoinment\");\n    console.log(selectedDoctor);\n    const Body = {\n      ...formData,\n      patientId: sessionStorage.getItem(\"userId\"),\n      doctorId: selectedDoctor\n    };\n    debugger;\n    try {\n      const response = await axios.post(url, Body);\n      console.log(\"Appointment booked successfully:\", response.data);\n      toast.success(\"Appointment booked successfully\");\n      navigate('/PatientServices');\n    } catch (error) {\n      console.error(\"Error booking appointment:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Helmet, {\n        title: \"Doctor\",\n        children: [/*#__PURE__*/_jsxDEV(CommonSection, {\n          title: \"Appointment Form\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n          children: /*#__PURE__*/_jsxDEV(Container, {\n            children: /*#__PURE__*/_jsxDEV(Table, {\n              striped: true,\n              children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Doctor Name\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 89,\n                    columnNumber: 19\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Contact Number\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 90,\n                    columnNumber: 19\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Specialization\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 91,\n                    columnNumber: 19\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Day\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 92,\n                    columnNumber: 19\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Time\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 93,\n                    columnNumber: 19\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 88,\n                  columnNumber: 17\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 87,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                children: doctor.map((doc, index) => /*#__PURE__*/_jsxDEV(DoctorItem, {\n                  doctor: doc\n                }, index, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 98,\n                  columnNumber: 19\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 3\n    }, this), sessionStorage.getItem(\"userRoles\") === \"Patient\" && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [\"        \", /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: bookAppointment,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"table-responsive\",\n            children: /*#__PURE__*/_jsxDEV(\"table\", {\n              className: \"table table-bordered\",\n              children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: /*#__PURE__*/_jsxDEV(\"th\", {\n                    colSpan: \"2\",\n                    className: \"text-center\",\n                    children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                      children: \"Fill Appointment Details\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 118,\n                      columnNumber: 24\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 117,\n                    columnNumber: 22\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 116,\n                  columnNumber: 20\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 115,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                    children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                      children: \"Patient Name:\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 125,\n                      columnNumber: 24\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 124,\n                    columnNumber: 20\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: /*#__PURE__*/_jsxDEV(\"input\", {\n                      type: \"text\",\n                      className: \"form-control\",\n                      name: \"name\",\n                      value: formData.name,\n                      onChange: handleInputChange,\n                      placeholder: \"Enter patient name\",\n                      required: true\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 128,\n                      columnNumber: 24\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 127,\n                    columnNumber: 22\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 123,\n                  columnNumber: 18\n                }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                    children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                      children: \"Patient Age:\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 141,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 140,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: /*#__PURE__*/_jsxDEV(\"input\", {\n                      type: \"text\",\n                      className: \"form-control\",\n                      name: \"age\",\n                      value: formData.age,\n                      onChange: handleInputChange,\n                      placeholder: \"Enter patient age\",\n                      required: true\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 144,\n                      columnNumber: 24\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 143,\n                    columnNumber: 22\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 139,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                    children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                      children: \"Patient Contact No:\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 157,\n                      columnNumber: 24\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 156,\n                    columnNumber: 22\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: /*#__PURE__*/_jsxDEV(\"input\", {\n                      type: \"text\",\n                      className: \"form-control\",\n                      name: \"contactNo\",\n                      value: formData.contactNo,\n                      onChange: handleInputChange,\n                      placeholder: \"Enter contact number\",\n                      required: true\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 160,\n                      columnNumber: 24\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 159,\n                    columnNumber: 22\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 155,\n                  columnNumber: 20\n                }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                    children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                      children: \"Relation with the Patient:\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 173,\n                      columnNumber: 24\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 172,\n                    columnNumber: 22\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: /*#__PURE__*/_jsxDEV(\"input\", {\n                      type: \"text\",\n                      className: \"form-control\",\n                      name: \"relation\",\n                      value: formData.relation,\n                      onChange: handleInputChange,\n                      placeholder: \"Enter relation\",\n                      required: true\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 176,\n                      columnNumber: 24\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 175,\n                    columnNumber: 22\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 171,\n                  columnNumber: 20\n                }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                    children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                      children: \"Appointment Date:\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 191,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 190,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: /*#__PURE__*/_jsxDEV(\"input\", {\n                      type: \"date\",\n                      className: \"form-control\",\n                      name: \"appointmentDate\",\n                      value: formData.appointmentDate,\n                      onChange: handleInputChange,\n                      required: true\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 194,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 193,\n                    columnNumber: 23\n                  }, this), \"\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 189,\n                  columnNumber: 20\n                }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: /*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 205,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 204,\n                  columnNumber: 20\n                }, this), loading ?\n                /*#__PURE__*/\n                // Show loading indicator if data is being fetched\n                _jsxDEV(\"tr\", {\n                  children: /*#__PURE__*/_jsxDEV(\"td\", {\n                    colSpan: \"2\",\n                    className: \"text-center\",\n                    children: \"Loading...\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 210,\n                    columnNumber: 24\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 209,\n                  columnNumber: 22\n                }, this) : doctor.length > 0 ?\n                /*#__PURE__*/\n                // Render select options if doctor data is available\n                _jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                    children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                      children: \"Select Doctor:\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 217,\n                      columnNumber: 26\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 216,\n                    columnNumber: 24\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: /*#__PURE__*/_jsxDEV(\"select\", {\n                      className: \"form-select select-doctor\",\n                      \"aria-label\": \"Select doctor\",\n                      onChange: e => setSelectedDoctor(e.target.value),\n                      required: true,\n                      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"\",\n                        children: \"Select a doctor\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 226,\n                        columnNumber: 28\n                      }, this), doctor.map((doc, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: doc.id,\n                        children: doc.name\n                      }, index, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 228,\n                        columnNumber: 30\n                      }, this))]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 220,\n                      columnNumber: 26\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 219,\n                    columnNumber: 24\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 215,\n                  columnNumber: 22\n                }, this) : /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: /*#__PURE__*/_jsxDEV(\"td\", {\n                    colSpan: \"2\",\n                    className: \"text-center\",\n                    children: \"No doctors available\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 241,\n                    columnNumber: 24\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 240,\n                  columnNumber: 22\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 122,\n                columnNumber: 20\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 16\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-center\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              className: \"btn btn-primary\",\n              children: \"Submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 250,\n              columnNumber: 16\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 14\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 19\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true);\n};\n_s(DoctorListing, \"9KmHRaGh6b0B/JGDZQ3agGU3BIA=\", false, function () {\n  return [useNavigate];\n});\n_c = DoctorListing;\nexport default DoctorListing;\n\n////******************************************************************************* */\n\n// import React, { useEffect, useState } from \"react\";\n// import { Container, Table } from \"reactstrap\";\n// import Helmet from \"../components/Helmet/Helmet\";\n// import CommonSection from \"../components/UI/CommonSection\";\n// import DoctorItem from \"../components/UI/DoctorItem\";\n// import axios from \"axios\";\n// import { createUrl, log } from \"../utils/utils\";\n// import \"../styles/header.css\";\n\n// const DoctorListing = () => {\n//   const [doctor, setDoctor] = useState([]);\n//   const [selectedDoctor, setSelectedDoctor] = useState(\"\");\n//   const [loading, setLoading] = useState(true);\n\n//   const patientId = sessionStorage.getItem(\"userId\");\n\n//   useEffect(() => {\n//     loadDoctors();\n//   }, []);\n\n//   const loadDoctors = () => {\n//     const url = createUrl(\"/doctor\");\n//     axios\n//       .get(url)\n//       .then(function (response) {\n//         setDoctor(response.data);\n//         setLoading(false); // Set loading to false after fetching data\n//         log(response);\n//       })\n//       .catch(function (error) {\n//         log(error);\n//         setLoading(false); // Set loading to false in case of error\n//       });\n//   };\n\n//   const bookAppointment = (event) => {\n//     event.preventDefault(); // Prevent default form submission behavior\n//     const formData = new FormData(event.target); // Get form data\n// console.log(formData);\n// debugger;\n// const Body = {\n//   name: formData.get(\"patientName\"),\n//   age: formData.get(\"patientAge\"),\n//   contactNo: formData.get(\"patientContactNo\"),\n//   relation: formData.get(\"relation\"),\n\n// };\n\n// const url = createUrl(\"/appointment\");\n\n// /* post(url, null, {\n//   params: { patientId: appointmentData.patientId, doctorId: appointmentData.doctorId },\n//   data: appointmentData.aptDto\n// })*/\n// axios.post(url, Body,{\n//   params: { patientId: sessionStorage.getItem(\"userId\"), doctorId: selectedDoctor }\n// })\n//   .then(function (response) {\n//     // Handle success\n//     console.log(\"Appointment booked successfully:\", response.data);\n//     //toast.success(\"Appointment booked successfully !\")\n//     // Optionally, you can reset the form fields here\n//   })\n//   .catch(function (error) {\n//     // Handle error\n//     console.error(\"Error booking appointment:\", error);\n//   });\n//   };\n\n//   return (\n//     <div>\n//       <Helmet title=\"Doctor\">\n//         <CommonSection title=\"Doctor List\" />\n//         <section>\n//           <Container>\n//             <Table striped>\n//               <thead>\n//                 <tr>\n//                   <th>Doctor Name</th>\n//                   <th>Contact Number</th>\n//                   <th>Specialization</th>\n//                   <th>Day</th>\n//                   <th>Time</th>\n//                 </tr>\n//               </thead>\n//               <tbody>\n//                 {doctor.map((doc, index) => (\n//                   <DoctorItem key={index} doctor={doc} />\n//                 ))}\n//               </tbody>\n//             </Table>\n//           </Container>\n//         </section>\n//       </Helmet>\n\n//       <div>\n//         <hr />\n//       </div>\n\n//       <div className=\"container\">\n//         <form onSubmit={bookAppointment}>\n//           <div className=\"table-responsive\">\n//             <table className=\"table table-bordered\">\n//               <thead>\n//                 <tr>\n//                   <th colSpan=\"2\" className=\"text-center\">\n//                     <strong>Fill Appointment Details</strong>\n//                   </th>\n//                 </tr>\n//               </thead>\n//               <tbody>\n//                 <tr>\n//                   <td><strong>Patient Name:</strong></td>\n//                   <td><input type=\"text\" className=\"form-control\" name=\"patientName\" placeholder=\"Enter patient name\" required /></td>\n//                 </tr>\n//                 <tr>\n//                   <td><strong>Patient Age:</strong></td>\n//                   <td><input type=\"text\" className=\"form-control\" name=\"patientAge\" placeholder=\"Enter patient age\" required /></td>\n//                 </tr>\n//                 <tr>\n//                   <td><strong>Patient Contact No:</strong></td>\n//                   <td><input type=\"text\" className=\"form-control\" name=\"patientContactNo\" placeholder=\"Enter contact number\" required /></td>\n//                 </tr>\n//                 <tr>\n//                   <td><strong>Relation with the Patient:</strong></td>\n//                   <td><input type=\"text\" className=\"form-control\" name=\"relation\" placeholder=\"Enter relation\" required /></td>\n//                 </tr>\n//                 {loading ? ( // Show loading indicator if data is being fetched\n//                   <tr>\n//                     <td colSpan=\"2\" className=\"text-center\">\n//                       Loading...\n//                     </td>\n//                   </tr>\n//                 ) : doctor.length > 0 ? ( // Render select options if doctor data is available\n//                   <tr>\n//                     <td><strong>Select Doctor:</strong></td>\n//                     <td>\n//                       <select className=\"form-select select-doctor\" aria-label=\"Select doctor\" onChange={(e) => setSelectedDoctor(e.target.value)} required>\n//                         <option value=\"\">Select a doctor</option>\n//                         {doctor.map((doc, index) => (\n//                           <option key={index} value={doc.dname}>{doc.dname}</option>\n//                         ))}\n//                       </select>\n//                     </td>\n//                   </tr>\n//                 ) : (\n//                   <tr>\n//                     <td colSpan=\"2\" className=\"text-center\">\n//                       No doctors available\n//                     </td>\n//                   </tr>\n//                 )}\n//               </tbody>\n//             </table>\n//           </div>\n//           <div className=\"text-center\">\n//             <button type=\"submit\" className=\"btn btn-primary\">Submit</button>\n//           </div>\n//         </form>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default DoctorListing;\n////////////////////////////**************************************************** */\n// import React, { useEffect, useState } from \"react\";\n// import { Container, Table } from \"reactstrap\";\n// import Helmet from \"../components/Helmet/Helmet\";\n// import CommonSection from \"../components/UI/CommonSection\";\n// import DoctorItem from \"../components/UI/DoctorItem\";\n// import axios from \"axios\";\n// import { createUrl, log } from \"../utils/utils\";\n// import \"../styles/header.css\";\n// import { toast } from \"react-toastify\";\n\n// const DoctorListing = () => {\n//   const [doctor, setDoctor] = useState([]);\n//   const [selectedDoctor, setSelectedDoctor] = useState(\"\");\n//   const [loading, setLoading] = useState(true);\n\n//   const patientId = sessionStorage.getItem(\"userId\");\n//   useEffect(() => {\n//     loadDoctors();\n//   }, []);\n\n//   const loadDoctors = () => {\n//     const url = createUrl(\"/doctor\");\n//     axios\n//       .get(url)\n//       .then(function (response) {\n//         setDoctor(response.data);\n//         setLoading(false); // Set loading to false after fetching data\n//         log(response);\n//       })\n//       .catch(function (error) {\n//         log(error);\n//         setLoading(false); // Set loading to false in case of error\n//       });\n//   };\n\n// const bookAppointment = (event) => {\n//   debugger;\n//   event.preventDefault(); // Prevent default form submission behavior\n//   const formData = new FormData(event.target); // Get form data\n\n//   const Body = {\n//     name: formData.get(\"patientName\"),\n//     age: formData.get(\"patientAge\"),\n//     contactNo: formData.get(\"patientContactNo\"),\n//     relation: formData.get(\"relation\"),\n\n//   };\n\n//   const url = createUrl(\"/appointment\");\n\n//   /* post(url, null, {\n//     params: { patientId: appointmentData.patientId, doctorId: appointmentData.doctorId },\n//     data: appointmentData.aptDto\n//   })*/\n//   axios.post(url, Body,{\n//     params: { patientId: sessionStorage.getItem(\"userId\"), doctorId: selectedDoctor }\n//   })\n//     .then(function (response) {\n//       // Handle success\n//       console.log(\"Appointment booked successfully:\", response.data);\n//       toast.success(\"Appointment booked successfully !\")\n//       // Optionally, you can reset the form fields here\n//     })\n//     .catch(function (error) {\n//       // Handle error\n//       console.error(\"Error booking appointment:\", error);\n//     });\n// };\n\n//   return (\n//     <div>\n//       <Helmet title=\"Doctor\">\n//         <CommonSection title=\"Doctor List\" />\n//         <section>\n//           <Container>\n//             <Table striped>\n//               <thead>\n//                 <tr>\n//                   <th>Doctor Name</th>\n//                   <th>Contact Number</th>\n//                   <th>Specialization</th>\n//                   <th>Day</th>\n//                   <th>Time</th>\n//                 </tr>\n//               </thead>\n//               <tbody>\n//                 {doctor.map((doc, index) => (\n//                   <DoctorItem key={index} doctor={doc} />\n//                 ))}\n//               </tbody>\n//             </Table>\n//           </Container>\n//         </section>\n//       </Helmet>\n\n//       <div>\n//         <hr />\n//       </div>\n\n//       <div className=\"container\">\n//         <form onSubmit={bookAppointment}>\n//           <div className=\"table-responsive\">\n//             <table className=\"table table-bordered\">\n//               <thead>\n//                 <tr>\n//                   <th colSpan=\"2\" className=\"text-center\">\n//                     <strong>Fill Appointment Details</strong>\n//                   </th>\n//                 </tr>\n//               </thead>\n//               <tbody>\n//                 <tr>\n//                   <td><strong>Patient Name:</strong></td>\n//                   <td><input type=\"text\" className=\"form-control\" placeholder=\"Enter patient name\" /></td>\n//                 </tr>\n//                 <tr>\n//                   <td><strong>Patient Age:</strong></td>\n//                   <td><input type=\"text\" className=\"form-control\" placeholder=\"Enter patient age\" /></td>\n//                 </tr>\n//                 <tr>\n//                   <td><strong>Patient Contact No:</strong></td>\n//                   <td><input type=\"text\" className=\"form-control\" placeholder=\"Enter contact number\" /></td>\n//                 </tr>\n//                 <tr>\n//                   <td><strong>Relation with the Patient:</strong></td>\n//                   <td><input type=\"text\" className=\"form-control\" placeholder=\"Enter relation\" /></td>\n//                 </tr>\n//                 {loading ? ( // Show loading indicator if data is being fetched\n//                   <tr>\n//                     <td colSpan=\"2\" className=\"text-center\">\n//                       Loading...\n//                     </td>\n//                   </tr>\n//                 ) : doctor.length > 0 ? ( // Render select options if doctor data is available\n//                   <tr>\n//                     <td><strong>Select Doctor:</strong></td>\n//                     <td>\n//                       <select className=\"form-select select-doctor\" aria-label=\"Select doctor\" onChange={(e) => setSelectedDoctor(e.target.value)}>\n//                         <option selected>Select a doctor</option>\n//                         {doctor.map((doc, index) => (\n//                           <option key={index} value={doc.dname}>{doc.dname}</option>\n//                         ))}\n//                       </select>\n//                     </td>\n//                   </tr>\n//                 ) : (\n//                   <tr>\n//                     <td colSpan=\"2\" className=\"text-center\">\n//                       No doctors available\n//                     </td>\n//                   </tr>\n//                 )}\n//               </tbody>\n//             </table>\n//           </div>\n//           <div className=\"text-center\">\n//             <button type=\"submit\" className=\"btn btn-primary\">Submit</button>\n//           </div>\n//         </form>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default DoctorListing;\n\n// import React, { useEffect, useState } from \"react\";\n// import { Container, Row, Col, Table, Dropdown } from \"reactstrap\";\n// import Helmet from \"../components/Helmet/Helmet\";\n// import CommonSection from \"../components/UI/CommonSection\";\n// import DoctorItem from \"../components/UI/DoctorItem\";\n// //import drItem from \"../pages/AddCar\";\n// import axios from \"axios\";\n// import { createUrl, log } from \"../utils/utils\";\n\n// const DoctorListing = () => {\n//   const [doctor, setDoctor] = useState([]);\n//   const [selectedDoctor, setSelectedDoctor] = useState(\"\");\n//   console.log(selectedDoctor);\n//   useEffect(() => {\n//     loadDoctors();\n//   }, []);\n\n//   const loadDoctors = () => {\n//     const url = createUrl(\"/doctor\");\n//     axios\n//       .get(url)\n//       .then(function (response) {\n//         setDoctor(response.data);\n//         log(response);\n//       })\n//       .catch(function (error) {\n//         log(error);\n//       });\n//   };\n\n//   return (\n//     <div>\n//       <Helmet title=\"Doctor\">\n//         <CommonSection title=\"Doctor List\" />\n//         <section>\n//           <Container>\n//             <Table striped>\n//               <thead>\n//                 <tr>\n//                   <th>Doctor Name</th>\n//                   <th>Contact Number</th>\n//                   <th>Specialization</th>\n//                   <th>Day</th>\n//                   <th>Time</th>\n//                 </tr>\n//               </thead>\n//               <tbody>\n//                 {doctor.map((doctor, index) => (\n//                   <DoctorItem key={index} doctor={doctor} />\n//                 ))}\n//               </tbody>\n//             </Table>\n//           </Container>\n//         </section>\n//       </Helmet>\n\n//       <div>\n\n//         <hr></hr>\n//       </div>\n\n//       <div class=\"container\">\n//   <form>\n//     <div class=\"table-responsive\">\n//       <table class=\"table table-bordered\">\n//         <thead>\n//           <tr>\n//             <th colspan=\"2\" class=\"text-center\"><strong>Fill Appointment Details</strong></th>\n//           </tr>\n//         </thead>\n//         <tbody>\n//           <tr>\n//             <td><strong>Patient Name:</strong></td>\n//             <td><input type=\"text\" class=\"form-control\" placeholder=\"Enter patient name\"/></td>\n//           </tr>\n//           <tr>\n//             <td><strong>Patient Age:</strong></td>\n//             <td><input type=\"text\" class=\"form-control\" placeholder=\"Enter patient age\"/></td>\n//           </tr>\n//           <tr>\n//             <td><strong>Patient Contact No:</strong></td>\n//             <td><input type=\"text\" class=\"form-control\" placeholder=\"Enter contact number\"/></td>\n//           </tr>\n//           <tr>\n//             <td><strong>Relation with the Patient:</strong></td>\n//             <td><input type=\"text\" class=\"form-control\" placeholder=\"Enter relation\"/></td>\n//           </tr>\n//           <tr>\n//           <td><strong>Select Doctor:</strong></td>\n//                     <td>\n//                       <select className=\"form-select\" aria-label=\"Select doctor\" onChange={(e) => setSelectedDoctor(e.target.value)}>\n//                         <option selected>Select a doctor</option>\n//                         {doctor.map((doc, index) => (\n//                           <option key={index} value={doc.name}>{doc.name}</option>\n//                         ))}\n//                       </select>\n//                     </td>\n//                   </tr>\n//                 ) : (\n//                   <tr>\n//                     <td colSpan=\"2\" className=\"text-center\">\n//                       No doctors available\n//                     </td>\n//           </tr>\n//         </tbody>\n//       </table>\n//     </div>\n//     <div class=\"text-center\">\n//       <button type=\"submit\" class=\"btn btn-primary\">Submit</button>\n//     </div>\n//   </form>\n// </div>\n\n//     </div>\n//   );\n// };\n\n// export default DoctorListing;\n\n// const DoctorListing = () => {\n//   //const [cars, setCars] = useState([]);\n//   const [doctor, setDoctor] = useState([]);\n\n//   useEffect( () => {\n//     loadDoctors();\n//   }, []);\n\n//   const loadDoctors = () => {\n//     const url = createUrl('/doctor');\n//     axios.get(url)\n//     .then(function (response) {\n//       debugger;\n//       setDoctor(response.data);\n//       log(response);\n//     })\n//     .catch(function (error) {\n\n//       log(error);\n//     })\n//     .finally(function () {\n\n//     });\n//   }\n//   return (\n//     <Helmet title=\"Doctor\">\n//       <CommonSection title=\"Doctor List\" />\n//       <section>\n//         <Container>\n//           <Row>\n//             {/* {doctor.map((doctors) => (\n//               <DoctorItem doctors={doctor} />\n//             ))} */}\n//           {/* {doctor.map((doctor) => (\n//               <Col md={6} lg={4} key={doctor.id}>\n//                 <DoctorItem doctor={doctor} />\n//               </Col>\n//             ))} */}\n\n//           {doctor.map((doctors, index) => (\n//             <DoctorItem key={index} doctors={doctors} />\n//           ))}\n//           </Row>\n//         </Container>\n//       </section>\n//     </Helmet>\n//   );\n// };\nvar _c;\n$RefreshReg$(_c, \"DoctorListing\");","map":{"version":3,"names":["React","useEffect","useState","Container","Table","Helmet","CommonSection","DoctorItem","axios","createUrl","log","toast","useNavigate","jsxDEV","_jsxDEV","Fragment","_Fragment","DoctorListing","_s","navigate","doctor","setDoctor","selectedDoctor","setSelectedDoctor","loading","setLoading","formData","setFormData","name","age","contactNo","relation","patientId","sessionStorage","getItem","loadDoctors","url","get","then","response","data","catch","error","handleInputChange","event","value","target","bookAppointment","preventDefault","console","Body","doctorId","post","success","children","title","fileName","_jsxFileName","lineNumber","columnNumber","striped","map","doc","index","className","onSubmit","colSpan","type","onChange","placeholder","required","appointmentDate","length","e","id","_c","$RefreshReg$"],"sources":["C:/Users/MAYUR GADEKAR/Desktop/HMS Frontend Git/HMS Frontend/src/pages/Appointment.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { Container, Table } from \"reactstrap\";\r\nimport Helmet from \"../components/Helmet/Helmet\";\r\nimport CommonSection from \"../components/UI/CommonSection\";\r\nimport DoctorItem from \"../components/UI/DoctorItem\";\r\nimport axios from \"axios\";\r\nimport { createUrl, log } from \"../utils/utils\";\r\nimport \"../styles/header.css\";\r\nimport { toast } from \"react-toastify\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst DoctorListing = () => {\r\n\r\n  const navigate = useNavigate();\r\n  const [doctor, setDoctor] = useState([]);\r\n  const [selectedDoctor, setSelectedDoctor] = useState(\"\");\r\n  const [loading, setLoading] = useState(true);\r\n  const [formData, setFormData] = useState({\r\n    name: \"\",\r\n    age: \"\",\r\n    contactNo: \"\",\r\n    relation: \"\",\r\n  });\r\n\r\n  const patientId = sessionStorage.getItem(\"userId\");\r\n \r\n  useEffect(() => {\r\n    loadDoctors();\r\n  }, []);\r\n\r\n  const loadDoctors = () => {\r\n    const url = createUrl(\"/doctor\");\r\n    axios\r\n      .get(url)\r\n      .then(function (response) {\r\n        setDoctor(response.data);\r\n        setLoading(false); // Set loading to false after fetching data\r\n        log(response);\r\n      })\r\n      .catch(function (error) {\r\n        log(error);\r\n        setLoading(false); // Set loading to false in case of error\r\n      });\r\n  };\r\n\r\n  const handleInputChange = (event) => {\r\n    const { name, value } = event.target;\r\n    setFormData({\r\n      ...formData,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  const bookAppointment = async (event) => {\r\n    \r\n\r\n    event.preventDefault(); // Prevent default form submission behavior\r\n    const url = createUrl(\"/appoinment\");\r\n    console.log(selectedDoctor);\r\n    const Body = {\r\n      ...formData,\r\n      patientId: sessionStorage.getItem(\"userId\"),\r\n      doctorId:selectedDoctor\r\n    };\r\n    debugger;\r\n    try {\r\n      const response = await axios.post(url, Body);\r\n      console.log(\"Appointment booked successfully:\", response.data);\r\n      toast.success(\"Appointment booked successfully\");\r\n      navigate('/PatientServices')\r\n      \r\n    } catch (error) {\r\n      console.error(\"Error booking appointment:\", error);\r\n    }\r\n  };\r\n\r\n\r\n\r\n  \r\n  return (\r\n<><div>\r\n      <Helmet title=\"Doctor\">\r\n        <CommonSection title=\"Appointment Form\" />\r\n        <section>\r\n          <Container>\r\n            <Table striped>\r\n              <thead>\r\n                <tr>\r\n                  <th>Doctor Name</th>\r\n                  <th>Contact Number</th>\r\n                  <th>Specialization</th>\r\n                  <th>Day</th>\r\n                  <th>Time</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {doctor.map((doc, index) => (\r\n                  <DoctorItem key={index} doctor={doc} />\r\n                ))}\r\n              </tbody>\r\n            </Table>\r\n          </Container>\r\n        </section>\r\n      </Helmet>\r\n\r\n      <div>\r\n        <hr />\r\n      </div>\r\n</div>\r\n      {sessionStorage.getItem(\"userRoles\")===\"Patient\" && (\r\n        <>        <div className=\"container\">\r\n        <form onSubmit={bookAppointment}>\r\n            <div className=\"table-responsive\">\r\n               <table className=\"table table-bordered\">\r\n                <thead>\r\n                   <tr>\r\n                     <th colSpan=\"2\" className=\"text-center\">\r\n                       <strong>Fill Appointment Details</strong>\r\n                     </th>\r\n        </tr>\r\n                </thead>\r\n                   <tbody>\r\n                 <tr>\r\n                   <td>\r\n                       <strong>Patient Name:</strong>\r\n                     </td>\r\n                     <td>\r\n                       <input\r\n                         type=\"text\"\r\n                         className=\"form-control\"\r\n                         name=\"name\"\r\n                         value={formData.name}\r\n                         onChange={handleInputChange}\r\n                         placeholder=\"Enter patient name\"\r\n                         required\r\n                       />\r\n                     </td>\r\n                   </tr>\r\n                  <tr>\r\n                    <td>\r\n                      <strong>Patient Age:</strong>\r\n                     </td>\r\n                     <td>\r\n                       <input\r\n                         type=\"text\"\r\n                       className=\"form-control\"\r\n                         name=\"age\"\r\n                         value={formData.age}\r\n                         onChange={handleInputChange}\r\n                         placeholder=\"Enter patient age\"\r\n                         required\r\n                       />\r\n                     </td>\r\n                   </tr>\r\n                   <tr>\r\n                     <td>\r\n                       <strong>Patient Contact No:</strong>\r\n                     </td>\r\n                     <td>\r\n                       <input\r\n                         type=\"text\"\r\n                         className=\"form-control\"\r\n                         name=\"contactNo\"\r\n                        value={formData.contactNo}\r\n                        onChange={handleInputChange}\r\n                        placeholder=\"Enter contact number\"\r\n                        required\r\n                      />\r\n                     </td>\r\n                   </tr>\r\n                   <tr>\r\n                     <td>\r\n                       <strong>Relation with the Patient:</strong>\r\n                     </td>\r\n                     <td>\r\n                       <input\r\n                         type=\"text\"\r\n                         className=\"form-control\"\r\n                         name=\"relation\"\r\n                         value={formData.relation}\r\n                         onChange={handleInputChange}\r\n                         placeholder=\"Enter relation\"\r\n                         required\r\n                       />\r\n                     </td>\r\n                   </tr>\r\n\r\n\r\n                   <tr>\r\n                      <td>\r\n                        <strong>Appointment Date:</strong>\r\n                      </td>\r\n                      <td>\r\n                        <input\r\n                          type=\"date\"\r\n                          className=\"form-control\"\r\n                          name=\"appointmentDate\"\r\n                          value={formData.appointmentDate}\r\n                          onChange={handleInputChange}\r\n                          required\r\n                        />\r\n                      </td>\r\n                    </tr>\r\n                   <tr>\r\n                    <td></td>\r\n              \r\n                   </tr>\r\n                   {loading ? ( // Show loading indicator if data is being fetched\r\n                     <tr>\r\n                       <td colSpan=\"2\" className=\"text-center\">\r\n                         Loading...\r\n                       </td>\r\n                     </tr>\r\n                   ) : doctor.length > 0 ? ( // Render select options if doctor data is available\r\n                     <tr>\r\n                       <td>\r\n                         <strong>Select Doctor:</strong>\r\n                       </td>\r\n                       <td>\r\n                         <select\r\n                           className=\"form-select select-doctor\"\r\n                           aria-label=\"Select doctor\"\r\n                           onChange={(e) => setSelectedDoctor(e.target.value)}\r\n                           required\r\n                         >\r\n                           <option value=\"\">Select a doctor</option>\r\n                           {doctor.map((doc, index) => (\r\n                             <option key={index} value={doc.id}>\r\n                               {doc.name}\r\n                             </option>\r\n\r\n                             \r\n                           ))}\r\n                         </select>\r\n                       </td>\r\n                       \r\n                     </tr>\r\n\r\n                   ) : (\r\n                     <tr>\r\n                       <td colSpan=\"2\" className=\"text-center\">\r\n                         No doctors available\r\n                       </td>\r\n                     </tr>\r\n                   )}\r\n                 </tbody>\r\n               </table>\r\n             </div>\r\n             <div className=\"text-center\">\r\n               <button type=\"submit\" className=\"btn btn-primary\">\r\n                 Submit\r\n             </button>\r\n           </div>\r\n           </form>\r\n         </div>\r\n       \r\n     </>\r\n      )}\r\n        </>\r\n\r\n  );\r\n};\r\n\r\nexport default DoctorListing;\r\n\r\n////******************************************************************************* */\r\n\r\n// import React, { useEffect, useState } from \"react\";\r\n// import { Container, Table } from \"reactstrap\";\r\n// import Helmet from \"../components/Helmet/Helmet\";\r\n// import CommonSection from \"../components/UI/CommonSection\";\r\n// import DoctorItem from \"../components/UI/DoctorItem\";\r\n// import axios from \"axios\";\r\n// import { createUrl, log } from \"../utils/utils\";\r\n// import \"../styles/header.css\";\r\n\r\n// const DoctorListing = () => {\r\n//   const [doctor, setDoctor] = useState([]);\r\n//   const [selectedDoctor, setSelectedDoctor] = useState(\"\");\r\n//   const [loading, setLoading] = useState(true);\r\n\r\n//   const patientId = sessionStorage.getItem(\"userId\");\r\n\r\n//   useEffect(() => {\r\n//     loadDoctors();\r\n//   }, []);\r\n\r\n//   const loadDoctors = () => {\r\n//     const url = createUrl(\"/doctor\");\r\n//     axios\r\n//       .get(url)\r\n//       .then(function (response) {\r\n//         setDoctor(response.data);\r\n//         setLoading(false); // Set loading to false after fetching data\r\n//         log(response);\r\n//       })\r\n//       .catch(function (error) {\r\n//         log(error);\r\n//         setLoading(false); // Set loading to false in case of error\r\n//       });\r\n//   };\r\n\r\n//   const bookAppointment = (event) => {\r\n//     event.preventDefault(); // Prevent default form submission behavior\r\n//     const formData = new FormData(event.target); // Get form data\r\n// console.log(formData);\r\n// debugger;\r\n// const Body = {\r\n//   name: formData.get(\"patientName\"),\r\n//   age: formData.get(\"patientAge\"),\r\n//   contactNo: formData.get(\"patientContactNo\"),\r\n//   relation: formData.get(\"relation\"),\r\n\r\n// };\r\n\r\n// const url = createUrl(\"/appointment\");\r\n\r\n// /* post(url, null, {\r\n//   params: { patientId: appointmentData.patientId, doctorId: appointmentData.doctorId },\r\n//   data: appointmentData.aptDto\r\n// })*/\r\n// axios.post(url, Body,{\r\n//   params: { patientId: sessionStorage.getItem(\"userId\"), doctorId: selectedDoctor }\r\n// })\r\n//   .then(function (response) {\r\n//     // Handle success\r\n//     console.log(\"Appointment booked successfully:\", response.data);\r\n//     //toast.success(\"Appointment booked successfully !\")\r\n//     // Optionally, you can reset the form fields here\r\n//   })\r\n//   .catch(function (error) {\r\n//     // Handle error\r\n//     console.error(\"Error booking appointment:\", error);\r\n//   });\r\n//   };\r\n\r\n//   return (\r\n//     <div>\r\n//       <Helmet title=\"Doctor\">\r\n//         <CommonSection title=\"Doctor List\" />\r\n//         <section>\r\n//           <Container>\r\n//             <Table striped>\r\n//               <thead>\r\n//                 <tr>\r\n//                   <th>Doctor Name</th>\r\n//                   <th>Contact Number</th>\r\n//                   <th>Specialization</th>\r\n//                   <th>Day</th>\r\n//                   <th>Time</th>\r\n//                 </tr>\r\n//               </thead>\r\n//               <tbody>\r\n//                 {doctor.map((doc, index) => (\r\n//                   <DoctorItem key={index} doctor={doc} />\r\n//                 ))}\r\n//               </tbody>\r\n//             </Table>\r\n//           </Container>\r\n//         </section>\r\n//       </Helmet>\r\n\r\n//       <div>\r\n//         <hr />\r\n//       </div>\r\n\r\n//       <div className=\"container\">\r\n//         <form onSubmit={bookAppointment}>\r\n//           <div className=\"table-responsive\">\r\n//             <table className=\"table table-bordered\">\r\n//               <thead>\r\n//                 <tr>\r\n//                   <th colSpan=\"2\" className=\"text-center\">\r\n//                     <strong>Fill Appointment Details</strong>\r\n//                   </th>\r\n//                 </tr>\r\n//               </thead>\r\n//               <tbody>\r\n//                 <tr>\r\n//                   <td><strong>Patient Name:</strong></td>\r\n//                   <td><input type=\"text\" className=\"form-control\" name=\"patientName\" placeholder=\"Enter patient name\" required /></td>\r\n//                 </tr>\r\n//                 <tr>\r\n//                   <td><strong>Patient Age:</strong></td>\r\n//                   <td><input type=\"text\" className=\"form-control\" name=\"patientAge\" placeholder=\"Enter patient age\" required /></td>\r\n//                 </tr>\r\n//                 <tr>\r\n//                   <td><strong>Patient Contact No:</strong></td>\r\n//                   <td><input type=\"text\" className=\"form-control\" name=\"patientContactNo\" placeholder=\"Enter contact number\" required /></td>\r\n//                 </tr>\r\n//                 <tr>\r\n//                   <td><strong>Relation with the Patient:</strong></td>\r\n//                   <td><input type=\"text\" className=\"form-control\" name=\"relation\" placeholder=\"Enter relation\" required /></td>\r\n//                 </tr>\r\n//                 {loading ? ( // Show loading indicator if data is being fetched\r\n//                   <tr>\r\n//                     <td colSpan=\"2\" className=\"text-center\">\r\n//                       Loading...\r\n//                     </td>\r\n//                   </tr>\r\n//                 ) : doctor.length > 0 ? ( // Render select options if doctor data is available\r\n//                   <tr>\r\n//                     <td><strong>Select Doctor:</strong></td>\r\n//                     <td>\r\n//                       <select className=\"form-select select-doctor\" aria-label=\"Select doctor\" onChange={(e) => setSelectedDoctor(e.target.value)} required>\r\n//                         <option value=\"\">Select a doctor</option>\r\n//                         {doctor.map((doc, index) => (\r\n//                           <option key={index} value={doc.dname}>{doc.dname}</option>\r\n//                         ))}\r\n//                       </select>\r\n//                     </td>\r\n//                   </tr>\r\n//                 ) : (\r\n//                   <tr>\r\n//                     <td colSpan=\"2\" className=\"text-center\">\r\n//                       No doctors available\r\n//                     </td>\r\n//                   </tr>\r\n//                 )}\r\n//               </tbody>\r\n//             </table>\r\n//           </div>\r\n//           <div className=\"text-center\">\r\n//             <button type=\"submit\" className=\"btn btn-primary\">Submit</button>\r\n//           </div>\r\n//         </form>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default DoctorListing;\r\n////////////////////////////**************************************************** */\r\n// import React, { useEffect, useState } from \"react\";\r\n// import { Container, Table } from \"reactstrap\";\r\n// import Helmet from \"../components/Helmet/Helmet\";\r\n// import CommonSection from \"../components/UI/CommonSection\";\r\n// import DoctorItem from \"../components/UI/DoctorItem\";\r\n// import axios from \"axios\";\r\n// import { createUrl, log } from \"../utils/utils\";\r\n// import \"../styles/header.css\";\r\n// import { toast } from \"react-toastify\";\r\n\r\n// const DoctorListing = () => {\r\n//   const [doctor, setDoctor] = useState([]);\r\n//   const [selectedDoctor, setSelectedDoctor] = useState(\"\");\r\n//   const [loading, setLoading] = useState(true);\r\n\r\n//   const patientId = sessionStorage.getItem(\"userId\");\r\n//   useEffect(() => {\r\n//     loadDoctors();\r\n//   }, []);\r\n\r\n//   const loadDoctors = () => {\r\n//     const url = createUrl(\"/doctor\");\r\n//     axios\r\n//       .get(url)\r\n//       .then(function (response) {\r\n//         setDoctor(response.data);\r\n//         setLoading(false); // Set loading to false after fetching data\r\n//         log(response);\r\n//       })\r\n//       .catch(function (error) {\r\n//         log(error);\r\n//         setLoading(false); // Set loading to false in case of error\r\n//       });\r\n//   };\r\n\r\n// const bookAppointment = (event) => {\r\n//   debugger;\r\n//   event.preventDefault(); // Prevent default form submission behavior\r\n//   const formData = new FormData(event.target); // Get form data\r\n\r\n//   const Body = {\r\n//     name: formData.get(\"patientName\"),\r\n//     age: formData.get(\"patientAge\"),\r\n//     contactNo: formData.get(\"patientContactNo\"),\r\n//     relation: formData.get(\"relation\"),\r\n\r\n//   };\r\n\r\n//   const url = createUrl(\"/appointment\");\r\n\r\n//   /* post(url, null, {\r\n//     params: { patientId: appointmentData.patientId, doctorId: appointmentData.doctorId },\r\n//     data: appointmentData.aptDto\r\n//   })*/\r\n//   axios.post(url, Body,{\r\n//     params: { patientId: sessionStorage.getItem(\"userId\"), doctorId: selectedDoctor }\r\n//   })\r\n//     .then(function (response) {\r\n//       // Handle success\r\n//       console.log(\"Appointment booked successfully:\", response.data);\r\n//       toast.success(\"Appointment booked successfully !\")\r\n//       // Optionally, you can reset the form fields here\r\n//     })\r\n//     .catch(function (error) {\r\n//       // Handle error\r\n//       console.error(\"Error booking appointment:\", error);\r\n//     });\r\n// };\r\n\r\n//   return (\r\n//     <div>\r\n//       <Helmet title=\"Doctor\">\r\n//         <CommonSection title=\"Doctor List\" />\r\n//         <section>\r\n//           <Container>\r\n//             <Table striped>\r\n//               <thead>\r\n//                 <tr>\r\n//                   <th>Doctor Name</th>\r\n//                   <th>Contact Number</th>\r\n//                   <th>Specialization</th>\r\n//                   <th>Day</th>\r\n//                   <th>Time</th>\r\n//                 </tr>\r\n//               </thead>\r\n//               <tbody>\r\n//                 {doctor.map((doc, index) => (\r\n//                   <DoctorItem key={index} doctor={doc} />\r\n//                 ))}\r\n//               </tbody>\r\n//             </Table>\r\n//           </Container>\r\n//         </section>\r\n//       </Helmet>\r\n\r\n//       <div>\r\n//         <hr />\r\n//       </div>\r\n\r\n//       <div className=\"container\">\r\n//         <form onSubmit={bookAppointment}>\r\n//           <div className=\"table-responsive\">\r\n//             <table className=\"table table-bordered\">\r\n//               <thead>\r\n//                 <tr>\r\n//                   <th colSpan=\"2\" className=\"text-center\">\r\n//                     <strong>Fill Appointment Details</strong>\r\n//                   </th>\r\n//                 </tr>\r\n//               </thead>\r\n//               <tbody>\r\n//                 <tr>\r\n//                   <td><strong>Patient Name:</strong></td>\r\n//                   <td><input type=\"text\" className=\"form-control\" placeholder=\"Enter patient name\" /></td>\r\n//                 </tr>\r\n//                 <tr>\r\n//                   <td><strong>Patient Age:</strong></td>\r\n//                   <td><input type=\"text\" className=\"form-control\" placeholder=\"Enter patient age\" /></td>\r\n//                 </tr>\r\n//                 <tr>\r\n//                   <td><strong>Patient Contact No:</strong></td>\r\n//                   <td><input type=\"text\" className=\"form-control\" placeholder=\"Enter contact number\" /></td>\r\n//                 </tr>\r\n//                 <tr>\r\n//                   <td><strong>Relation with the Patient:</strong></td>\r\n//                   <td><input type=\"text\" className=\"form-control\" placeholder=\"Enter relation\" /></td>\r\n//                 </tr>\r\n//                 {loading ? ( // Show loading indicator if data is being fetched\r\n//                   <tr>\r\n//                     <td colSpan=\"2\" className=\"text-center\">\r\n//                       Loading...\r\n//                     </td>\r\n//                   </tr>\r\n//                 ) : doctor.length > 0 ? ( // Render select options if doctor data is available\r\n//                   <tr>\r\n//                     <td><strong>Select Doctor:</strong></td>\r\n//                     <td>\r\n//                       <select className=\"form-select select-doctor\" aria-label=\"Select doctor\" onChange={(e) => setSelectedDoctor(e.target.value)}>\r\n//                         <option selected>Select a doctor</option>\r\n//                         {doctor.map((doc, index) => (\r\n//                           <option key={index} value={doc.dname}>{doc.dname}</option>\r\n//                         ))}\r\n//                       </select>\r\n//                     </td>\r\n//                   </tr>\r\n//                 ) : (\r\n//                   <tr>\r\n//                     <td colSpan=\"2\" className=\"text-center\">\r\n//                       No doctors available\r\n//                     </td>\r\n//                   </tr>\r\n//                 )}\r\n//               </tbody>\r\n//             </table>\r\n//           </div>\r\n//           <div className=\"text-center\">\r\n//             <button type=\"submit\" className=\"btn btn-primary\">Submit</button>\r\n//           </div>\r\n//         </form>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default DoctorListing;\r\n\r\n// import React, { useEffect, useState } from \"react\";\r\n// import { Container, Row, Col, Table, Dropdown } from \"reactstrap\";\r\n// import Helmet from \"../components/Helmet/Helmet\";\r\n// import CommonSection from \"../components/UI/CommonSection\";\r\n// import DoctorItem from \"../components/UI/DoctorItem\";\r\n// //import drItem from \"../pages/AddCar\";\r\n// import axios from \"axios\";\r\n// import { createUrl, log } from \"../utils/utils\";\r\n\r\n// const DoctorListing = () => {\r\n//   const [doctor, setDoctor] = useState([]);\r\n//   const [selectedDoctor, setSelectedDoctor] = useState(\"\");\r\n//   console.log(selectedDoctor);\r\n//   useEffect(() => {\r\n//     loadDoctors();\r\n//   }, []);\r\n\r\n//   const loadDoctors = () => {\r\n//     const url = createUrl(\"/doctor\");\r\n//     axios\r\n//       .get(url)\r\n//       .then(function (response) {\r\n//         setDoctor(response.data);\r\n//         log(response);\r\n//       })\r\n//       .catch(function (error) {\r\n//         log(error);\r\n//       });\r\n//   };\r\n\r\n//   return (\r\n//     <div>\r\n//       <Helmet title=\"Doctor\">\r\n//         <CommonSection title=\"Doctor List\" />\r\n//         <section>\r\n//           <Container>\r\n//             <Table striped>\r\n//               <thead>\r\n//                 <tr>\r\n//                   <th>Doctor Name</th>\r\n//                   <th>Contact Number</th>\r\n//                   <th>Specialization</th>\r\n//                   <th>Day</th>\r\n//                   <th>Time</th>\r\n//                 </tr>\r\n//               </thead>\r\n//               <tbody>\r\n//                 {doctor.map((doctor, index) => (\r\n//                   <DoctorItem key={index} doctor={doctor} />\r\n//                 ))}\r\n//               </tbody>\r\n//             </Table>\r\n//           </Container>\r\n//         </section>\r\n//       </Helmet>\r\n\r\n//       <div>\r\n\r\n//         <hr></hr>\r\n//       </div>\r\n\r\n//       <div class=\"container\">\r\n//   <form>\r\n//     <div class=\"table-responsive\">\r\n//       <table class=\"table table-bordered\">\r\n//         <thead>\r\n//           <tr>\r\n//             <th colspan=\"2\" class=\"text-center\"><strong>Fill Appointment Details</strong></th>\r\n//           </tr>\r\n//         </thead>\r\n//         <tbody>\r\n//           <tr>\r\n//             <td><strong>Patient Name:</strong></td>\r\n//             <td><input type=\"text\" class=\"form-control\" placeholder=\"Enter patient name\"/></td>\r\n//           </tr>\r\n//           <tr>\r\n//             <td><strong>Patient Age:</strong></td>\r\n//             <td><input type=\"text\" class=\"form-control\" placeholder=\"Enter patient age\"/></td>\r\n//           </tr>\r\n//           <tr>\r\n//             <td><strong>Patient Contact No:</strong></td>\r\n//             <td><input type=\"text\" class=\"form-control\" placeholder=\"Enter contact number\"/></td>\r\n//           </tr>\r\n//           <tr>\r\n//             <td><strong>Relation with the Patient:</strong></td>\r\n//             <td><input type=\"text\" class=\"form-control\" placeholder=\"Enter relation\"/></td>\r\n//           </tr>\r\n//           <tr>\r\n//           <td><strong>Select Doctor:</strong></td>\r\n//                     <td>\r\n//                       <select className=\"form-select\" aria-label=\"Select doctor\" onChange={(e) => setSelectedDoctor(e.target.value)}>\r\n//                         <option selected>Select a doctor</option>\r\n//                         {doctor.map((doc, index) => (\r\n//                           <option key={index} value={doc.name}>{doc.name}</option>\r\n//                         ))}\r\n//                       </select>\r\n//                     </td>\r\n//                   </tr>\r\n//                 ) : (\r\n//                   <tr>\r\n//                     <td colSpan=\"2\" className=\"text-center\">\r\n//                       No doctors available\r\n//                     </td>\r\n//           </tr>\r\n//         </tbody>\r\n//       </table>\r\n//     </div>\r\n//     <div class=\"text-center\">\r\n//       <button type=\"submit\" class=\"btn btn-primary\">Submit</button>\r\n//     </div>\r\n//   </form>\r\n// </div>\r\n\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default DoctorListing;\r\n\r\n// const DoctorListing = () => {\r\n//   //const [cars, setCars] = useState([]);\r\n//   const [doctor, setDoctor] = useState([]);\r\n\r\n//   useEffect( () => {\r\n//     loadDoctors();\r\n//   }, []);\r\n\r\n//   const loadDoctors = () => {\r\n//     const url = createUrl('/doctor');\r\n//     axios.get(url)\r\n//     .then(function (response) {\r\n//       debugger;\r\n//       setDoctor(response.data);\r\n//       log(response);\r\n//     })\r\n//     .catch(function (error) {\r\n\r\n//       log(error);\r\n//     })\r\n//     .finally(function () {\r\n\r\n//     });\r\n//   }\r\n//   return (\r\n//     <Helmet title=\"Doctor\">\r\n//       <CommonSection title=\"Doctor List\" />\r\n//       <section>\r\n//         <Container>\r\n//           <Row>\r\n//             {/* {doctor.map((doctors) => (\r\n//               <DoctorItem doctors={doctor} />\r\n//             ))} */}\r\n//           {/* {doctor.map((doctor) => (\r\n//               <Col md={6} lg={4} key={doctor.id}>\r\n//                 <DoctorItem doctor={doctor} />\r\n//               </Col>\r\n//             ))} */}\r\n\r\n//           {doctor.map((doctors, index) => (\r\n//             <DoctorItem key={index} doctors={doctors} />\r\n//           ))}\r\n//           </Row>\r\n//         </Container>\r\n//       </section>\r\n//     </Helmet>\r\n//   );\r\n// };\r\n"],"mappings":"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},"metadata":{},"sourceType":"module","externalDependencies":[]}